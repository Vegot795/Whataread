# Code from module: AppMod
import customtkinter as ctk

import BookMod
from AddBookMod import AddBook
from EditBookMod import EditBook



class App(ctk.CTk):
    def __init__(self, books_instance):
        super().__init__()
        self.configure(fg_color='green')
        self.geometry("600x800")
        self.title("Whataread")
        self.grid_columnconfigure(0, weight=1)
        self.grid_columnconfigure(2, weight=1)


        self.my_books = books_instance

        self.title_label = ctk.CTkLabel(self, text="Whataread!", font=("default", 40))
        self.title_label.pack(fill='both', expand=False, pady=5, padx=5)
        self.search_entry = ctk.CTkEntry(self)
        self.search_entry.pack(fill='both', expand=False, pady=5, padx=5)

        self.book_list_frame = ctk.CTkFrame(self)
        self.book_list_frame.pack(fill='both', expand=True, pady=5, padx=5)

        self.button = ctk.CTkButton(self, text='Dodaj książkę', command=self.open_add_book)
        self.button.pack(fill='both', expand=False, pady=5, padx=5)

        self.add_book = None

        self.update_book_list()

    def open_add_book(self):
        if self.add_book is not None and self.add_book.winfo_exists():
            self.add_book.destroy()

        self.add_book = AddBook(self.my_books)
        self.add_book.wait_window()
        self.update_book_list()

    def edit_book(self, index):
        edit_window = EditBook(self.my_books, index)
        edit_window.wait_window()
        self.update_book_list()

    def move_up_book(self, index):
        if index > 0:
            self.my_books.move_book_up(index)
            self.update_book_list()

    def move_down_book(self, index):
        if index < len(self.my_books.get_books()) - 1:
            self.my_books.move_book_down(index)
            self.update_book_list()



    def update_book_list(self):
        for widget in self.book_list_frame.winfo_children():
            widget.destroy()

        current_books = self.my_books.get_books()

        for index, book in enumerate(current_books):
            book_frame = ctk.CTkFrame(self.book_list_frame)
            book_frame.pack(fill='x', pady=5, padx=5)
            book_frame.columnconfigure(0, weight=1)
            book_frame.columnconfigure(1, weight=0)

            info_frame = ctk.CTkFrame(book_frame)
            info_frame.grid(column=0, row=0, sticky='ew', padx=5)

            button_frame = ctk.CTkFrame(book_frame)
            button_frame.grid(column=1, row=0, sticky='ew', padx=5)

            book_title_label = ctk.CTkLabel(info_frame, text=f"Title: {book['title']}")
            book_title_label.pack(fill='x', expand=False)
            book_author_label = ctk.CTkLabel(info_frame, text=f"Author: {book['author']}")
            book_author_label.pack(fill='x', expand=False)
            book_publisher_label = ctk.CTkLabel(info_frame, text=f"Publisher: {book['publisher']}")
            book_publisher_label.pack(fill='x', expand=False)

            move_up_button = ctk.CTkButton(button_frame, width=5, height=5, text="UP")
            move_up_button.grid(row=0, padx=5, pady=5)

            edit_button = ctk.CTkButton(button_frame, width=5, height=5, text="Edit", command=lambda idx=index: self.edit_book(idx) )
            edit_button.grid(row=1, padx=5, pady=5)

            move_down_button = ctk.CTkButton(button_frame, width=5, height=5, text="down")
            move_down_button.grid(row=2, padx=5, pady=5)


# Code from module: AddBookMod
import customtkinter as ctk
from customtkinter import CTkToplevel

class AddBook(CTkToplevel):
    def __init__(self, book_manager):
        super().__init__()
        self.book_manager = book_manager
        self.geometry("400x300")
        self.title("Dodaj książkę")

        title_label = ctk.CTkLabel(self, text="Tytuł:")
        title_label.pack(fill='both', expand=False, pady=5, padx=5)
        self.title_entry = ctk.CTkEntry(self)
        self.title_entry.pack(fill='both', expand=False, pady=5, padx=5)

        author_label = ctk.CTkLabel(self, text="Autor:")
        author_label.pack(fill='both', expand=False, pady=5, padx=5)
        self.author_entry = ctk.CTkEntry(self)
        self.author_entry.pack(fill='both', expand=False)

        publisher_label = ctk.CTkLabel(self, text="Wydawnictwo:")
        publisher_label.pack(fill='both', expand=False, pady=5, padx=5)
        self.publisher_entry = ctk.CTkEntry(self)
        self.publisher_entry.pack(fill='both', expand=False)

        self.add_book_button = ctk.CTkButton(self, text="Dodaj książkę", command=self.add_new_book)
        self.add_book_button.pack(fill='both', expand=False)

    def add_new_book(self):
        book_title = self.title_entry.get()
        book_author = self.author_entry.get()
        book_publisher = self.publisher_entry.get()

        self.book_manager.add_books(book_title, book_author, book_publisher)
        self.book_manager.save_books()
        self.destroy()


# Code from module: EditBookMod
import customtkinter as ctk
from customtkinter import CTkToplevel


class EditBook(CTkToplevel):
    def __init__(self, book_manager, index):
        super().__init__()
        self.book_manager = book_manager
        self.index = index
        self.geometry("400x300")
        self.title("Edytuj książkę")

        book = self.book_manager.get_book_by_index(self.index)

        if book is None:
            print(f"Book not found for index {self.index}")
        else:
            title_label = ctk.CTkLabel(self, text="Tytuł:")
            title_label.pack(fill='both', expand=False, pady=5, padx=5)
            self.title_entry = ctk.CTkEntry(self)
            self.title_entry.insert(0, book['title'])
            self.title_entry.pack(fill='both', expand=False, pady=5, padx=5)

            author_label = ctk.CTkLabel(self, text="Autor:")
            author_label.pack(fill='both', expand=False, pady=5, padx=5)
            self.author_entry = ctk.CTkEntry(self)
            self.author_entry.insert(0, book['author'])
            self.author_entry.pack(fill='both', expand=False)

            publisher_label = ctk.CTkLabel(self, text="Wydawnictwo:")
            publisher_label.pack(fill='both', expand=False, pady=5, padx=5)
            self.publisher_entry = ctk.CTkEntry(self)
            self.publisher_entry.insert(0, book['publisher'])
            self.publisher_entry.pack(fill='both', expand=False)

            self.edit_book_button = ctk.CTkButton(self, text="Zatwierdź edycję", command=self.edit_existing_book)
            self.edit_book_button.pack(fill='both', expand=False)

    def edit_existing_book(self):
        update_title = self.title_entry.get()
        update_author = self.author_entry.get()
        update_publisher = self.publisher_entry.get()

        self.book_manager.edit_book(self.index, update_title, update_author, update_publisher)
        self.destroy()


# Code from module: main
from BookMod import Book
from AppMod import App

my_books = Book()
app = App(my_books)
app.mainloop()


